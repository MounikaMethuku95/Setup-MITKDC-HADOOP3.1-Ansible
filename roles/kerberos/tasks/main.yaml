# ========= Install Kerberos packages =========
- name: Install Kerberos packages
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop: 
  - krb5-server
  - krb5-server-ldap
  - krb5-libs
  - krb5-workstation
  - openldap-clients
  - python-ldap

# ========= Ensure Kerberos container exists in LDAP =========
- name: Ensure Kerberos container exists
  community.general.ldap_entry:
    dn: "{{ kerberos_container_dn }}"
    objectClass:
      - top
      - organizationalUnit
    attributes:
      ou: Kerberos
    bind_dn: "{{ ldap_rootdn }}"
    bind_pw: "{{ ldap_rootpw }}"
    server_uri: "ldap://localhost"
  register: kerberos_container
  failed_when: kerberos_container is failed
  notify: restart kerberos

# ========= Create Kerberos service account =========
- name: Ensure Kerberos service account exists
  community.general.ldap_entry:
    dn: "cn=krb-svc,{{ kerberos_container_dn }}"
    objectClass:
      - simpleSecurityObject
      - organizationalRole
    attributes:
      cn: krb-svc
      userPassword: "{{ kdc_ldap_pw }}"
      description: "Kerberos LDAP Bind Account"
    bind_dn: "{{ ldap_rootdn }}"
    bind_pw: "{{ ldap_rootpw }}"
    server_uri: "ldap://localhost"

# ========= Create Kerberos database =========
- name: Create Kerberos database with LDAP backend
  ansible.builtin.command: >
    kdb5_ldap_util -D "{{ ldap_rootdn }}" -w "{{ ldap_rootpw }}"
    create -subtrees "{{ kerberos_container_dn }}"
    -r "{{ realm }}" -s -H ldap://localhost
    -P "{{ kdc_master_pw }}"
  args:
    creates: /var/kerberos/krb5kdc/principal

# ========= Enable and start Kerberos services =========
- name: Ensure KDC and admin services are enabled and running
  ansible.builtin.systemd:
    name: "{{ item }}"
    state: started
    enabled: true
  loop:
    - krb5kdc
    - kadmin
