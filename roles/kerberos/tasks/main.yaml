- name: Install Kerberos packages
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop:
  - krb5-server
  - krb5-server-ldap 
  - krb5-libs
  - krb5-workstation
  - openldap-clients
  - python-ldap

- name: Render krb5.conf
  ansible.builtin.template:
    src: krb5.conf.j2
    dest: /etc/krb5.conf
    owner: root
    group: root
    mode: '0644'

- name: Render kdc.conf
  ansible.builtin.template:
    src: kdc.conf.j2
    dest: /var/kerberos/krb5kdc/kdc.conf
    owner: root
    group: root
    mode: '0644'

- name: Render kadm5.acl
  ansible.builtin.template:
    src: kadm5.acl.j2
    dest: /var/kerberos/krb5kdc/kadm5.acl
    owner: root
    group: root
    mode: '0644'

# ---------------- LDAP Subtree ---------------- #

- name: Render LDIF for Kerberos subtree and service account
  ansible.builtin.template:
    src: kerberos-subtree.ldif.j2
    dest: /tmp/kerberos-subtree.ldif
    owner: root
    group: root
    mode: '0600'

- name: Check if Kerberos subtree already exists
  ansible.builtin.command: >
    ldapsearch -x -D "{{ ldap_rootdn }}" -w "{{ ldap_rootpw }}"
    -b "{{ krb_subtree }}" "(objectClass=organizationalUnit)"
  register: kerberos_subtree_check
  failed_when: false
  changed_when: false

- name: Ensure Kerberos subtree and service account exist
  ansible.builtin.command: >
    ldapadd -x -D "{{ ldap_rootdn }}" -w "{{ ldap_rootpw }}"
    -f /tmp/kerberos-subtree.ldif
  when: kerberos_subtree_check.rc != 0
  register: kerberos_subtree_add
  changed_when: kerberos_subtree_add.rc == 0

- name: Create marker file for Kerberos subtree
  ansible.builtin.file:
    path: /etc/krb5kdc/kerberos-subtree.set
    state: touch

# ---------------- KDC Database ---------------- #

- name: Check if Kerberos DB already exists
  ansible.builtin.stat:
    path: /var/kerberos/krb5kdc/principal
  register: kdc_db_file

- name: Create Kerberos database with LDAP backend
  ansible.builtin.command: >
    kdb5_ldap_util -D {{ ldap_rootdn }} -w {{ ldap_rootpw }}
    create -subtrees {{ krb_subtree }} -r {{ realm }} -s -P {{ kdc_master_pw }}
  when: not kdc_db_file.stat.exists
  register: kdb_create
  changed_when: kdb_create.rc == 0

# ---------------- Services ---------------- #

- name: Ensure KDC and admin services are enabled and running
  ansible.builtin.service:
    name: "{{ item }}"
    state: started
    enabled: yes
  loop:
    - krb5kdc
    - kadmin