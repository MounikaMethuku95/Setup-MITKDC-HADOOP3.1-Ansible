# ========= Install Kerberos =========

- name: Install Kerberos packages
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop:
    - krb5-server
    - krb5-server-ldap
    - krb5-libs
    - krb5-workstation
    - openldap-clients
    - python-ldap

# ========= Ensure Kerberos container in LDAP =========

- name: Ensure Kerberos container exists
  community.general.ldap_entry:
    dn: "{{ kerberos_container_dn }}"
    objectClass:
      - top
      - organizationalUnit
    attributes:
      ou: Kerberos
    bind_dn: "{{ ldap_rootdn }}"
    bind_pw: "{{ ldap_rootpw }}"
    server_uri: "ldap://localhost"
  register: kerberos_container
  failed_when: kerberos_container is failed

- name: Create marker for Kerberos container
  ansible.builtin.file:
    path: "{{ kerberos_container_marker }}"
    state: touch
  when: kerberos_container.changed

# ========= Service account for KDC =========

- name: Ensure Kerberos service account exists
  community.general.ldap_entry:
    dn: "{{ kdc_ldap_dn }}"
    objectClass:
      - simpleSecurityObject
      - organizationalRole
    attributes:
      cn: krb-svc
      userPassword: "{{ kdc_ldap_pw }}"
      description: "Kerberos LDAP Bind Account"
    bind_dn: "{{ ldap_rootdn }}"
    bind_pw: "{{ ldap_rootpw }}"
    server_uri: "ldap://localhost"

# ========= Create Kerberos database =========

- name: Create Kerberos database with LDAP backend
  ansible.builtin.command: >
    kdb5_ldap_util -D {{ ldap_rootdn }} -w {{ ldap_rootpw }}
    create -subtrees {{ kerberos_container_dn }}
    -r {{ realm }} -s -P {{ kdc_master_pw }}
  args:
    creates: "{{ kerberos_db_marker }}"

- name: Create marker for Kerberos DB
  ansible.builtin.file:
    path: "{{ kerberos_db_marker }}"
    state: touch

# ========= Start Kerberos services =========

- name: Ensure KDC and admin services are enabled and running
  ansible.builtin.service:
    name: "{{ item }}"
    state: started
    enabled: yes
  loop:
    - krb5kdc
    - kadmin
