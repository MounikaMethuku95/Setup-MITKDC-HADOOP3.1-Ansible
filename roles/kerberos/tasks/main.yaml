- name: Install Kerberos packages
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop:
  - krb5-server
  - krb5-server-ldap 
  - krb5-libs
  - krb5-workstation
  - openldap-clients
  - python-ldap

# Ensure required LDAP objects exist before creating realm
- name: Ensure Kerberos container exists
  community.general.ldap_entry:
    dn: "cn=krbContainer,{{ basedn }}"
    objectClass:
      - top
      - krbContainer
    attributes:
      cn: krbContainer
    bind_dn: "{{ ldap_rootdn }}"
    bind_pw: "{{ ldap_rootpw }}"
    server_uri: "ldap://localhost"

- name: Ensure Kerberos subtree exists in LDAP
  community.general.ldap_entry:
    dn: "{{ krb_subtree }}"
    objectClass:
      - top
      - organizationalUnit
    attributes:
      ou: Kerberos
    bind_dn: "{{ ldap_rootdn }}"
    bind_pw: "{{ ldap_rootpw }}"
    server_uri: "ldap://localhost"

- name: Ensure Kerberos service account exists in LDAP
  community.general.ldap_entry:
    dn: "{{ kdc_ldap_dn }}"
    objectClass:
      - simpleSecurityObject
      - organizationalRole
    attributes:
      cn: krb-svc
      description: Kerberos LDAP Service Account
      userPassword: "{{ kdc_ldap_pw }}"
    bind_dn: "{{ ldap_rootdn }}"
    bind_pw: "{{ ldap_rootpw }}"
    server_uri: "ldap://localhost"

# Create the realm in LDAP backend
- name: Create Kerberos database with LDAP backend
  ansible.builtin.command: >
    kdb5_ldap_util -D "{{ ldap_rootdn }}" -w "{{ ldap_rootpw }}"
    create -subtrees "{{ krb_subtree }}" -r "{{ realm }}" -s
    -P "{{ kdc_master_pw }}"
  args:
    creates: "/var/kerberos/krb5kdc/.k5.{{ realm }}"

# Deploy configs with handlers
- name: Deploy krb5.conf
  ansible.builtin.template:
    src: krb5.conf.j2
    dest: /etc/krb5.conf
    owner: root
    group: root
    mode: '0644'
  notify: Restart Kerberos services

- name: Deploy kdc.conf
  ansible.builtin.template:
    src: kdc.conf.j2
    dest: /var/kerberos/krb5kdc/kdc.conf
    owner: root
    group: root
    mode: '0644'
  notify: Restart Kerberos services

- name: Deploy kadm5.acl
  ansible.builtin.template:
    src: kadm5.acl.j2
    dest: /var/kerberos/krb5kdc/kadm5.acl
    owner: root
    group: root
    mode: '0644'
  notify: Restart Kerberos services

# Enable services (restart handled by handlers if needed)
- name: Ensure KDC and admin services are enabled
  ansible.builtin.service:
    name: "{{ item }}"
    enabled: yes
  loop:
    - krb5kdc
    - kadmin
