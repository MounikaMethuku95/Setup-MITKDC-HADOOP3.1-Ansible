# roles/kerberos/tasks/main.yml
# Kerberos role tasks â€” use ldapi (SASL EXTERNAL) for local LDAP changes to avoid credential problems.

- name: Install Kerberos packages
  ansible.builtin.package:
    name:
      - krb5-server
      - krb5-server-ldap
      - krb5-libs
      - krb5-workstation
      - openldap-clients
      - python3-ldap
    state: present

# ------------------------------
# Render and add Kerberos container (ou=Kerberos,...)
# ------------------------------
- name: Render kerberos container LDIF
  ansible.builtin.template:
    src: kerberos-container.ldif.j2
    dest: /tmp/kerberos-container.ldif
    owner: root
    group: root
    mode: '0600'

- name: Ensure Kerberos container exists (use SASL EXTERNAL over ldapi)
  ansible.builtin.command: >
    ldapadd -Y EXTERNAL -H ldapi:/// -f /tmp/kerberos-container.ldif
  register: kerberos_container_add
  failed_when: kerberos_container_add.rc not in [0,68]
  changed_when: kerberos_container_add.rc == 0

- name: Create marker for Kerberos container (only when added)
  ansible.builtin.file:
    path: "{{ kerberos_container_marker | default('/etc/krb5kdc/kerberos_container_created') }}"
    state: touch
  when: kerberos_container_add.rc == 0

# ------------------------------
# Render and add Kerberos service account (cn=krb-svc,...)
# ------------------------------
- name: Render kerberos service account LDIF
  ansible.builtin.template:
    src: kerberos-service.ldif.j2
    dest: /tmp/kerberos-service.ldif
    owner: root
    group: root
    mode: '0600'

- name: Ensure Kerberos service account exists (use SASL EXTERNAL over ldapi)
  ansible.builtin.command: >
    ldapadd -Y EXTERNAL -H ldapi:/// -f /tmp/kerberos-service.ldif
  register: kerberos_service_add
  failed_when: kerberos_service_add.rc not in [0,68]
  changed_when: kerberos_service_add.rc == 0

# ------------------------------
# Create Kerberos database using kdb5_ldap_util (idempotent via marker)
# ------------------------------
- name: Create Kerberos database with LDAP backend
  ansible.builtin.command: >
    kdb5_ldap_util -D "{{ ldap_rootdn }}" -w "{{ ldap_rootpw }}"
    create -subtrees "{{ kerberos_container_dn }}"
    -r "{{ realm }}" -s -P "{{ kdc_master_pw }}"
  register: kdb_create
  args:
    creates: "{{ kerberos_db_marker | default('/etc/krb5kdc/kerberos_db_created') }}"
  changed_when: kdb_create.rc == 0

- name: Create marker for Kerberos DB
  ansible.builtin.file:
    path: "{{ kerberos_db_marker | default('/etc/krb5kdc/kerberos_db_created') }}"
    state: touch
  when: kdb_create.rc == 0

# ------------------------------
# Start / enable services
# ------------------------------
- name: Ensure KDC and admin services are enabled and running
  ansible.builtin.systemd:
    name: "{{ item }}"
    state: started
    enabled: true
  loop:
    - krb5kdc
    - kadmin
