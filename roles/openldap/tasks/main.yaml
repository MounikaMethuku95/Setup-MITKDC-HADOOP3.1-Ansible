---
- name: Install OpenLDAP
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop:
    - openldap-servers
    - openldap-clients

- name: Start and enable slapd
  ansible.builtin.service:
    name: slapd
    state: started
    enabled: yes

- name: Generate hashed LDAP root password
  ansible.builtin.command: slappasswd -s {{ ldap_rootpw }}
  register: rootpw_hash
  changed_when: false

# ðŸ”¹ Discover correct database DN (works for hdb/mdb)
- name: Discover main LDAP database DN
  ansible.builtin.command: >
    ldapsearch -Y EXTERNAL -H ldapi:/// -b cn=config '(olcDatabase=*)' dn
  register: ldap_db_search
  changed_when: false

- name: Extract database DN (skip frontend/config)
  ansible.builtin.set_fact:
    ldap_db_dn: >-
      {{ (ldap_db_search.stdout_lines
          | select('match', '^dn: olcDatabase={[0-9]+}(hdb|mdb),cn=config')
          | list
          | first
          | regex_replace('^dn: ', '')) }}

- name: Render LDIF for suffix and rootDN
  ansible.builtin.template:
    src: configure-rootdn.ldif.j2
    dest: /tmp/configure-rootdn.ldif
    owner: root
    group: root
    mode: '0600'

- name: Apply LDAP rootDN and suffix config
  ansible.builtin.command: ldapmodify -Y EXTERNAL -H ldapi:/// -f /tmp/configure-rootdn.ldif
  args:
    creates: /etc/openldap/slapd.d/olcRootPW.set

- name: Create marker file to avoid reapplying rootDN config
  ansible.builtin.file:
    path: /etc/openldap/slapd.d/olcRootPW.set
    state: touch

# Ensure base DN entry exists
- name: Render LDIF for base DN
  ansible.builtin.template:
    src: basedn.ldif.j2
    dest: /tmp/basedn.ldif
    owner: root
    group: root
    mode: '0600'

- name: Add base DN to LDAP
  ansible.builtin.command: >
    ldapadd -x -D "{{ ldap_rootdn }}" -w "{{ ldap_rootpw }}" -f /tmp/basedn.ldif
  args:
    creates: /etc/openldap/slapd.d/basedn.set

- name: Create marker file for basedn
  ansible.builtin.file:
    path: /etc/openldap/slapd.d/basedn.set
    state: touch

# Load Kerberos schema so krbContainer objectClass is available
- name: Ensure temporary directory for schema conversion exists
  ansible.builtin.file:
    path: /tmp/kerberos_schema
    state: directory
    mode: '0755'

- name: Convert Kerberos schema to LDIF
  ansible.builtin.command: >
    slaptest -f /etc/openldap/schema/kerberos.schema -F /tmp/kerberos_schema
  args:
    creates: /tmp/kerberos_schema/cn=config/cn=schema

- name: Add Kerberos schema to LDAP
  ansible.builtin.command: >
    ldapadd -Y EXTERNAL -H ldapi:/// -f /tmp/kerberos_schema/cn=config/cn=schema/cn={0}kerberos.ldif
  args:
    creates: /etc/openldap/slapd.d/cn=config/cn=schema/cn={0}kerberos.ldif