---
# roles/openldap/tasks/main.yml

- name: Install OpenLDAP
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop:
    - openldap-servers
    - openldap-clients

- name: Start and enable slapd
  ansible.builtin.service:
    name: slapd
    state: started
    enabled: yes

- name: Generate hashed LDAP root password
  ansible.builtin.command: slappasswd -s {{ ldap_rootpw }}
  register: rootpw_hash
  changed_when: false

- name: Render LDIF for suffix and rootDN
  ansible.builtin.template:
    src: configure-rootdn.ldif.j2
    dest: /tmp/configure-rootdn.ldif
    owner: root
    group: root
    mode: '0600'

- name: Apply LDAP rootDN and suffix config
  ansible.builtin.command: ldapmodify -Y EXTERNAL -H ldapi:/// -f /tmp/configure-rootdn.ldif
  args:
    creates: /etc/openldap/slapd.d/olcRootPW.set

- name: Create marker file to avoid reapplying rootDN config
  ansible.builtin.file:
    path: /etc/openldap/slapd.d/olcRootPW.set
    state: touch

- name: Render LDIF for baseDN entry
  ansible.builtin.template:
    src: basedn.ldif.j2
    dest: /tmp/basedn.ldif
    owner: root
    group: root
    mode: '0600'

- name: Add baseDN entry to LDAP
  ansible.builtin.command: ldapadd -x -D {{ ldap_rootdn }} -w {{ ldap_rootpw }} -f /tmp/basedn.ldif
  args:
    creates: /etc/openldap/slapd.d/basedn.set

- name: Create marker file for baseDN
  ansible.builtin.file:
    path: /etc/openldap/slapd.d/basedn.set
    state: touch

# -------------------------------
# Kerberos schema integration
# -------------------------------

- name: Check if kerberos schema already added
  ansible.builtin.stat:
    path: /etc/openldap/slapd.d/cn=config/cn=schema/cn={0}kerberos.ldif
  register: kerberos_ldif

- name: Ensure temporary kerberos schema directory is clean
  ansible.builtin.file:
    path: /tmp/kerberos_schema
    state: absent
  when: not kerberos_ldif.stat.exists

- name: Create minimal slapd.conf for kerberos schema
  ansible.builtin.template:
    src: kerberos_convert.conf.j2
    dest: /tmp/kerberos_convert.conf
  when: not kerberos_ldif.stat.exists

- name: Convert kerberos.schema to LDIF
  ansible.builtin.command:
    cmd: slaptest -f /tmp/kerberos_convert.conf -F /tmp/kerberos_schema
  when: not kerberos_ldif.stat.exists
  args:
    creates: /tmp/kerberos_schema/cn=config/cn=schema/cn={0}kerberos.ldif

- name: Add Kerberos schema to slapd
  ansible.builtin.command:
    cmd: ldapadd -Y EXTERNAL -H ldapi:/// -f /tmp/kerberos_schema/cn=config/cn=schema/cn={0}kerberos.ldif
  when: not kerberos_ldif.stat.exists

- name:
