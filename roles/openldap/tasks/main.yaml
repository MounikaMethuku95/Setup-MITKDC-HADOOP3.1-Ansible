---

- name: Install OpenLDAP
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop:
    - openldap-servers
    - openldap-clients

- name: Start and enable slapd
  ansible.builtin.service:
    name: slapd
    state: started
    enabled: yes

- name: Generate hashed LDAP root password
  ansible.builtin.command: slappasswd -s {{ ldap_rootpw }}
  register: rootpw_hash
  changed_when: rootpw_hash.rc == 0

# üîç Detect whether backend is hdb or mdb
- name: Detect LDAP database type
  ansible.builtin.shell: |
    ldapsearch -Y EXTERNAL -H ldapi:/// -b "cn=config" "(objectClass=olcDatabaseConfig)" dn | grep -E "olcDatabase=\{[0-9]+\}(hdb|mdb)"
  register: ldap_db_detect
  changed_when: false

- name: Set ldap_db_type fact
  ansible.builtin.set_fact:
    ldap_db_type: "{{ ldap_db_detect.stdout_lines[0].split(': ')[1].split(',')[0] }}"

- name: Render LDIF for suffix and rootDN
  ansible.builtin.template:
    src: configure-rootdn.ldif.j2
    dest: /tmp/configure-rootdn.ldif

- name: Apply LDAP rootDN and suffix config
  ansible.builtin.command:
    cmd: ldapmodify -Y EXTERNAL -H ldapi:/// -f /tmp/configure-rootdn.ldif
  args:
    creates: /etc/openldap/rootdn_configured

- name: Create marker file to avoid reapplying rootDN config
  ansible.builtin.file:
    path: /etc/openldap/rootdn_configured
    state: touch

- name: Render LDIF for baseDN entry
  ansible.builtin.template:
    src: basedn.ldif.j2
    dest: /tmp/basedn.ldif

- name: Add baseDN entry to LDAP
  ansible.builtin.command:
    cmd: ldapadd -x -D {{ ldap_rootdn }} -w {{ ldap_rootpw }} -f /tmp/basedn.ldif
  args:
    creates: /etc/openldap/basedn_added

- name: Create marker file for baseDN
  ansible.builtin.file:
    path: /etc/openldap/basedn_added
    state: touch
